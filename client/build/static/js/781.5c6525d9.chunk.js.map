{"version":3,"file":"static/js/781.5c6525d9.chunk.js","mappings":"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","sources":["components/AdminOrders.js","components/AdminSidebar.js","functions/order.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getOrders, updateOrderStatus } from '../functions/order';\r\nimport AdminSidebar from './AdminSidebar';\r\n\r\nfunction AdminOrders() {\r\n\r\n    const { user } = useSelector(state => ({ ...state }))\r\n    const [ orders, setOrders ] = useState([])\r\n    const navigate = useNavigate()\r\n  \r\n    useEffect(() => {\r\n      if(user) { \r\n        getOrders(\"\").then((res) => setOrders(res.data))\r\n      }\r\n      else {\r\n        navigate('/')\r\n      }\r\n    },[])\r\n\r\n    const handleOrderStatusChange = (e, orderId) => {\r\n\r\n        updateOrderStatus(orderId, e.target.value)\r\n        .then((res) => {\r\n            getOrders(\"\").then((res) => setOrders(res.data))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display:'flex',height: '100vh'}}>\r\n\r\n        <AdminSidebar panelName={'Orders'}/>\r\n        <div className=\"verticalLine\" style={{ borderLeft: '1px solid #b1b1b1' }}></div>\r\n        <div className=\"p-3\" style={{ width: '100%' }}>\r\n        \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\" scope=\"col\">Order ID</th>\r\n                        <th className=\"text-center\" scope=\"col\">Name</th>\r\n                        <th className=\"text-center\" scope=\"col\">selling price</th> \r\n                        <th className=\"text-center\" scope=\"col\">Quantity</th>           \r\n                        <th className=\"text-center\" scope=\"col\">Status</th>\r\n                        <th className=\"text-center\" scope=\"col\">Update Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map((order, i) =>\r\n                    <tr key = {i}>\r\n                        <td className=\"text-center\">{ order._id }</td>\r\n                        <td className=\"text-center\">{ order.productName }</td>\r\n                        <td className=\"text-center\">{ order.sellingPrice }</td>\r\n                        <td className=\"text-center\">{ order.quantity }</td>\r\n                        <td className=\"text-center\">{ order.status }</td>\r\n                        <td className=\"text-center\">\r\n                            <form>             \r\n                                    <select name=\"status\" value={order.status} onChange={(e) => handleOrderStatusChange(e, order._id)}>\r\n                                        <option>Select Status</option>\r\n                                        <option value=\"Order Placed\">Order Placed</option>\r\n                                        <option value=\"Dispatched\">Dispatched</option>\r\n                                        <option value=\"Delivered\">Delivered</option>\r\n                                        <option value=\"Cancelled\">Cancelled</option>\r\n                                    </select>\r\n                            </form>\r\n                        </td>\r\n                    </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminOrders;\r\n","import React, { useEffect } from 'react'\r\nimport './AdminSidebar.css'\r\nimport { auth } from '../firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nexport default function AdminSidebar({panelName}) {\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    //useEffect(() => console.log(user.user.first_name), [user])\r\n    useEffect(() => {\r\n        if (!user) navigate(\"/\")\r\n    }, [user])\r\n    \r\n    const logout = () => {\r\n        auth.signOut();\r\n        dispatch({\r\n          type: \"LOGOUT\",\r\n          payload: null\r\n        })\r\n    };\r\n\r\n    return (\r\n        \r\n            <div style={{ width: '250px' }}>\r\n                <div className=\"p-3\" style={{ width: '250px' }}>\r\n                    <a\r\n                        className=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none\">\r\n                        <span className=\"fs-3\">Admin Panel</span>\r\n                    </a>\r\n                    <hr />\r\n                    <div className=\"dropdown\">\r\n                        <a  className=\"d-flex align-items-center link-dark text-decoration-none dropdown-toggle\"\r\n                            id=\"dropdownUser2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            <img src=\"https://avatars.githubusercontent.com/u/38310111?v=4\" alt=\"\" width=\"32\" height=\"32\"\r\n                                className=\"rounded-circle me-2\" />\r\n                            <strong>{user ? user.first_name : ''}</strong>\r\n                        </a>\r\n                        <ul className=\"dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser2\" >\r\n                            <li>\r\n                                <button className=\"dropdown-item\" name=\"profileBtn\" type=\"submit\">Profile</button>\r\n                            </li>\r\n                            <li>\r\n                                <hr className=\"dropdown-divider\" />\r\n                            </li>\r\n                            <li>\r\n                                <a name=\"signOutBtn\" onClick={logout} className=\"dropdown-item\">Log out</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <hr />\r\n                    <ul className=\"nav nav-pills flex-column mb-auto accordion\">\r\n                        <li>\r\n                            <Link to=\"/admin/dashboard\" className={panelName==\"Products\" ? \"nav-link active\" : \"nav-link link-dark\"}>\r\n                                Products\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/admin/orders\" className={panelName==\"Orders\" ? \"nav-link active\" : \"nav-link link-dark\"}>\r\n                                Orders\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        \r\n    );\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport const insertOrders = async (placed_orders) =>\r\n  await axios.post(`${process.env.REACT_APP_API}/orders`, placed_orders)\r\n\r\nexport const getOrders = async (userId) =>\r\n  await axios.post(`${process.env.REACT_APP_API}/listOrders`, {userId: userId})\r\n\r\nexport const updateOrderStatus = async (orderId, status) =>\r\n  await axios.post(`${process.env.REACT_APP_API}/updateOrderStatus`, {orderId: orderId, status: status})","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["user","useSelector","state","useState","orders","setOrders","navigate","useNavigate","useEffect","getOrders","then","res","data","style","display","height","panelName","className","borderLeft","width","scope","map","order","i","_id","productName","sellingPrice","quantity","status","name","value","onChange","e","orderId","updateOrderStatus","target","handleOrderStatusChange","AdminSidebar","dispatch","useDispatch","id","src","alt","first_name","type","onClick","auth","payload","to","insertOrders","placed_orders","axios","process","userId","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}